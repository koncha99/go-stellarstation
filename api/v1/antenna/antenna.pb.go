// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stellarstation/api/v1/antenna/antenna.proto

package antenna // import "github.com/infostellarinc/go-stellarstation/api/v1/antenna"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The polarization of an antenna.
// https://en.wikipedia.org/wiki/Antenna_(radio)#Polarization
type AntennaPolarization int32

const (
	// Horizontal polarization.
	AntennaPolarization_HORIZONTAL AntennaPolarization = 0
	// Vertical polarization.
	AntennaPolarization_VERTICAL AntennaPolarization = 1
	// Left-handed circular polarization.
	AntennaPolarization_LHCP AntennaPolarization = 2
	// Right-handed circular polarization.
	AntennaPolarization_RHCP AntennaPolarization = 3
)

var AntennaPolarization_name = map[int32]string{
	0: "HORIZONTAL",
	1: "VERTICAL",
	2: "LHCP",
	3: "RHCP",
}
var AntennaPolarization_value = map[string]int32{
	"HORIZONTAL": 0,
	"VERTICAL":   1,
	"LHCP":       2,
	"RHCP":       3,
}

func (x AntennaPolarization) String() string {
	return proto.EnumName(AntennaPolarization_name, int32(x))
}
func (AntennaPolarization) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_antenna_eb2736854947ed08, []int{0}
}

// The static configuration of an antenna. These are the physical parameters of the antenna.
type AntennaConfiguration struct {
	// The latitude of the antenna, in degrees.
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// The longitude of the antenna, in degrees.
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// The altitude of the antenna above mean sea level, in meters.
	AltitudeMeters float64 `protobuf:"fixed64,3,opt,name=altitude_meters,json=altitudeMeters,proto3" json:"altitude_meters,omitempty"`
	// The beamwidth, in degrees.
	// https://en.wikipedia.org/wiki/Beamwidth
	BeamwidthDegrees     float64  `protobuf:"fixed64,4,opt,name=beamwidth_degrees,json=beamwidthDegrees,proto3" json:"beamwidth_degrees,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AntennaConfiguration) Reset()         { *m = AntennaConfiguration{} }
func (m *AntennaConfiguration) String() string { return proto.CompactTextString(m) }
func (*AntennaConfiguration) ProtoMessage()    {}
func (*AntennaConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_antenna_eb2736854947ed08, []int{0}
}
func (m *AntennaConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AntennaConfiguration.Unmarshal(m, b)
}
func (m *AntennaConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AntennaConfiguration.Marshal(b, m, deterministic)
}
func (dst *AntennaConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AntennaConfiguration.Merge(dst, src)
}
func (m *AntennaConfiguration) XXX_Size() int {
	return xxx_messageInfo_AntennaConfiguration.Size(m)
}
func (m *AntennaConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_AntennaConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_AntennaConfiguration proto.InternalMessageInfo

func (m *AntennaConfiguration) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *AntennaConfiguration) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *AntennaConfiguration) GetAltitudeMeters() float64 {
	if m != nil {
		return m.AltitudeMeters
	}
	return 0
}

func (m *AntennaConfiguration) GetBeamwidthDegrees() float64 {
	if m != nil {
		return m.BeamwidthDegrees
	}
	return 0
}

func init() {
	proto.RegisterType((*AntennaConfiguration)(nil), "stellarstation.api.v1.antenna.AntennaConfiguration")
	proto.RegisterEnum("stellarstation.api.v1.antenna.AntennaPolarization", AntennaPolarization_name, AntennaPolarization_value)
}

func init() {
	proto.RegisterFile("stellarstation/api/v1/antenna/antenna.proto", fileDescriptor_antenna_eb2736854947ed08)
}

var fileDescriptor_antenna_eb2736854947ed08 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0xfb, 0x30,
	0x18, 0xc6, 0xff, 0xd9, 0xc6, 0x9f, 0xf9, 0x32, 0x66, 0x8d, 0x1e, 0x86, 0x28, 0xa8, 0x17, 0xc5,
	0x61, 0xca, 0xf0, 0xe6, 0x6d, 0x9b, 0xe2, 0x06, 0xd5, 0x95, 0x32, 0x3c, 0xec, 0x32, 0xd2, 0x36,
	0xeb, 0x02, 0x69, 0x52, 0xd2, 0x74, 0x82, 0x1f, 0xc8, 0xcf, 0x29, 0x4d, 0xdb, 0x89, 0x97, 0x9d,
	0xf2, 0xe4, 0x79, 0x7e, 0x21, 0x2f, 0xef, 0x03, 0xc3, 0xdc, 0x30, 0x21, 0xa8, 0xce, 0x0d, 0x35,
	0x5c, 0x49, 0x97, 0x66, 0xdc, 0xdd, 0x8d, 0x5c, 0x2a, 0x0d, 0x93, 0x92, 0x36, 0x27, 0xc9, 0xb4,
	0x32, 0x0a, 0x5f, 0xfe, 0x85, 0x09, 0xcd, 0x38, 0xd9, 0x8d, 0x48, 0x0d, 0xdd, 0x7c, 0x23, 0x38,
	0x1b, 0x57, 0x7a, 0xaa, 0xe4, 0x86, 0x27, 0x85, 0xb6, 0x1c, 0x3e, 0x87, 0xae, 0xa0, 0x86, 0x9b,
	0x22, 0x66, 0x03, 0x74, 0x85, 0xee, 0x50, 0xb0, 0xbf, 0xe3, 0x0b, 0x38, 0x12, 0x4a, 0x26, 0x55,
	0xd8, 0xb2, 0xe1, 0xaf, 0x81, 0x6f, 0xe1, 0x98, 0x8a, 0x8a, 0x5c, 0xa7, 0xcc, 0x30, 0x9d, 0x0f,
	0xda, 0x96, 0xe9, 0x37, 0xf6, 0x9b, 0x75, 0xf1, 0x10, 0x4e, 0x42, 0x46, 0xd3, 0x4f, 0x1e, 0x9b,
	0xed, 0x3a, 0x66, 0x89, 0x66, 0x2c, 0x1f, 0x74, 0x2c, 0xea, 0xec, 0x83, 0xe7, 0xca, 0xbf, 0x7f,
	0x85, 0xd3, 0x7a, 0x4e, 0x5f, 0x09, 0xaa, 0xf9, 0x57, 0x35, 0x66, 0x1f, 0x60, 0xb6, 0x08, 0xe6,
	0xab, 0xc5, 0xfb, 0x72, 0xec, 0x39, 0xff, 0x70, 0x0f, 0xba, 0x1f, 0x2f, 0xc1, 0x72, 0x3e, 0x1d,
	0x7b, 0x0e, 0xc2, 0x5d, 0xe8, 0x78, 0xb3, 0xa9, 0xef, 0xb4, 0x4a, 0x15, 0x94, 0xaa, 0x3d, 0x51,
	0x70, 0x1d, 0xa9, 0x94, 0x1c, 0x5c, 0xcb, 0xa4, 0xd7, 0xfc, 0x55, 0xee, 0xd0, 0x47, 0xab, 0xa7,
	0x84, 0x9b, 0x6d, 0x11, 0x92, 0x48, 0xa5, 0x2e, 0x97, 0x1b, 0x55, 0xbf, 0xe6, 0x32, 0x72, 0x13,
	0xf5, 0x70, 0xb0, 0x8f, 0xf0, 0xbf, 0x2d, 0xe2, 0xf1, 0x27, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x1c,
	0xc0, 0x89, 0xb7, 0x01, 0x00, 0x00,
}
